rule read $$$
title: rd_first_day
rule "rd_first_day"
//MES401
when
  $entity: BaseEntity(getFirstDay($entity.getReportDate()) !=1)
then
  $entity.addValidationError("Неверная отчетная дата");
end
$$$

rule save


rule read $$$
title: проверка кредитора
rule "проверка кредитора"
when
  $entity: BaseEntity(getMeta().getClassName() == "credit"
       && getBaseEntityReportDate() != null
       && getEl("creditor") != null
       && getBaseEntityReportDate().getCreditorId() != ((BaseEntity) getEl("creditor")).getId()
    )
then
   $entity.addValidationError("Неправильно установлен кредитор");
end
$$$

rule save

rule read $$$
title: не заполнен язык руководителя
rule "не заполнен язык руководителя"
when
  $entity: BaseEntity(getMeta().getClassName() == "credit"
       && getEls("{count}subject.organization_info.head.names[lang=null]") > 0
    )
then
   $entity.addValidationError("Не заполнен язык при наименовании руководителя");
end
$$$

rule save

rule read $$$
title: не заполнен язык из списка для руководителя
rule "не заполнен язык из списка для руководителя"
when
  $entity: BaseEntity(getMeta().getClassName() == "credit"
       && getEls("{setString(EN,KZ,RU)}subject.organization_info.head.names.lang") !=
          getEls("{count}subject.organization_info.head.names.lang")
    )
then
   $entity.addValidationError("Не заполнен язык из списка EN, KZ, RU для руководителя");
end
$$$

rule save

rule read $$$
title: дупликат языка руководителя
rule "дупликат языка руководителя"
when
  $entity: BaseEntity(getMeta().getClassName() == "credit"
       && getEls("{hasDuplicates(subject.organization_info.head.names)}lang") == true
    )
then
   $entity.addValidationError("дупликат языка руководителя");
end
$$$

rule save


rule read $$$
title: не заполнен язык наименования для организации
rule "не заполнен язык наименования для организации"
when
  $entity: BaseEntity(getMeta().getClassName() == "credit"
       && getEls("{count}subject.organization_info.names[lang=null]") > 0
    )
then
   $entity.addValidationError("Не заполнен язык наименования для организации");
end
$$$

rule save

rule read $$$
title: не заполнен язык из списка для организации
rule "не заполнен язык из списка для организации"
when
  $entity: BaseEntity(getMeta().getClassName() == "credit"
       && getEls("{setString(EN,KZ,RU)}subject.organization_info.names.lang") !=
          getEls("{count}subject.organization_info.names.lang")
    )
then
   $entity.addValidationError("Не заполнен язык из списка EN, KZ, RU для организации");
end
$$$

rule save

rule read $$$
title: дупликат языка наименования для организации
rule "дупликат языка наименования для организации"
when
  $entity: BaseEntity(getMeta().getClassName() == "credit"
       && getEls("{hasDuplicates(subject.organization_info.names)}lang") == true
    )
then
   $entity.addValidationError("дупликат языка наименования для организации");
end
$$$

rule save

rule read $$$
title: не заполнен язык наименования для физ лица
rule "не заполнен язык наименования для физ лица"
when
  $entity: BaseEntity(getMeta().getClassName() == "credit"
       && getEls("{count}subject.person_info.names[lang=null]") > 0
    )
then
   $entity.addValidationError("Не заполнен язык наименования для физ лица");
end
$$$

rule save

rule read $$$
title: не заполнен язык из списка для физ лица
rule "не заполнен язык из списка для физ лица"
when
  $entity: BaseEntity(getMeta().getClassName() == "credit"
       && getEls("{setString(EN,KZ,RU)}subject.person_info.names.lang") !=
          getEls("{count}subject.person_info.names.lang")
    )
then
   $entity.addValidationError("Не заполнен язык из списка EN, KZ, RU для физ лица");
end
$$$

rule save

rule read $$$
title: дупликат языка наименования для физ лица
rule "дупликат языка наименования для физ лица"
when
  $entity: BaseEntity(getMeta().getClassName() == "credit"
       && getEls("{hasDuplicates(subject.person_info.names)}lang") == true
    )
then
   $entity.addValidationError("дупликат языка наименования для физ лица");
end
$$$

rule save

rule read $$$
title: Дата договора < Отчетная дата
rule "Дата договора < Отчетная дата"
//MES838
when
  $entity: BaseEntity(getMeta().getClassName() == "credit"
    && pDate: getEl("primary_contract.date")
    && pDate!=null
    && pDate >= getReportDate())
then
  $entity.addValidationError("Дата договора должна быть раньше отчетной даты");
end

$$$

rule save

rule read $$$
title: сумма в обеспечение договора
rule "remains_pledges_value"
when
  $entity: BaseEntity(getMeta().getClassName() == "credit"
                && ( $r : getIncorrectValues((List)getEls("{get}pledges.value")) && $r.size() > 0))
then
  $entity.addValidationError("Не правильная сумма в обеспечение договора");
end
$$$

rule save

rule read $$$
title: сумма в остатке начисленного вознаграждения договора
rule "remains_interest_current_value"
when
  $entity: BaseEntity(getMeta().getClassName() == "credit"
                && ($r : getEl("change.remains.interest.current.value"))
                && $r != null
                && toDouble($r) < 0)
then
  $entity.addValidationError("Не правильная сумма в остатке начисленного вознаграждения договора");
end
$$$

rule save

rule read $$$
title: сумма в валюте остатка начисленного вознаграждения договора
rule "remains_interest_current_value_currency"
when
  $entity: BaseEntity(getMeta().getClassName() == "credit"
                && ($r : getEl("change.remains.interest.current.value_currency"))
                && $r != null
                && toDouble($r) < 0)
then
  $entity.addValidationError("Не правильная сумма в валюте остатка начисленного вознаграждения договора");
end
$$$

rule save

rule read $$$
title: сумма остатка лимита договора
rule "remains_limit_value"
when
  $entity: BaseEntity(getMeta().getClassName() == "credit"
                && ($r : getEl("change.remains.limit.value"))
                && $r != null
                && toDouble($r) < 0)
then
  $entity.addValidationError("Не правильная сумма остатка лимита договора");
end
$$$

rule save

rule read $$$
title: сумма в валюте остатка лимита договора
rule "remains_limit_value_currency"
when
  $entity: BaseEntity(getMeta().getClassName() == "credit"
                && ($r : getEl("change.remains.limit.value_currency"))
                && $r != null
                && toDouble($r) < 0)
then
  $entity.addValidationError("Не правильная сумма в валюте остатка лимита договора");
end
$$$

rule save


rule read $$$
title: сумма в остатке долга списанной задолженности
rule "remains_dept_write_off_value"
when
  $entity: BaseEntity(getMeta().getClassName() == "credit"
                && ($r : getEl("change.remains.debt.write_off.value"))
                && $r != null
                && toDouble($r) < 0)
then
  $entity.addValidationError("Не правильная сумма в остатке долга списанной задолженности");
end
$$$

rule save

rule read $$$
title: сумма в валюте остатка долга списанной задолженности
rule "remains_dept_write_off_value_currency"
when
  $entity: BaseEntity(getMeta().getClassName() == "credit"
                && ($r : getEl("change.remains.debt.write_off.value_currency"))
                && $r != null
                && toDouble($r) < 0)
then
  $entity.addValidationError("Не правильная сумма в валюте остатка долга списанной задолженности");
end
$$$

rule save

rule read $$$
title: сумма в остатке начисленного вознаграждения договора
rule "remains_interest_write_off_value"
when
  $entity: BaseEntity(getMeta().getClassName() == "credit"
                && ($r : getEl("change.remains.interest.write_off.value"))
                && $r != null
                && toDouble($r) < 0)
then
  $entity.addValidationError("Не правильная сумма в остатке начисленного вознаграждения договора");
end
$$$

rule save

rule read $$$
title: сумма в валюте остатка начисленного вознаграждения договора
rule "remains_interest_write_off_value_currency"
when
  $entity: BaseEntity(getMeta().getClassName() == "credit"
                && ($r : getEl("change.remains.interest.write_off.value_currency"))
                && $r != null
                && toDouble($r) < 0)
then
  $entity.addValidationError("Не правильная сумма в валюте остатка начисленного вознаграждения договора");
end
$$$

rule save


rule read $$$
title: сумма дисконтированной стоимости договора
rule "remains_discounted_value_value"
when
  $entity: BaseEntity(getMeta().getClassName() == "credit"
                && ($r : getEl("change.remains.discounted_value.value"))
                && $r != null
                && toDouble($r) < 0)
then
  $entity.addValidationError("Не правильная сумма дисконтированной стоимости договора");
end
$$$

rule save

rule read $$$
title: сумма в корректировке договора
rule "remains_correction_value"
when
  $entity: BaseEntity(getMeta().getClassName() == "credit"
                && ($r : getEl("change.remains.correction.value"))
                && $r != null
                && toDouble($r) < 0)
then
  $entity.addValidationError("Не правильная сумма в корректировке договора");
end
$$$

rule save



rule read $$$
title: сумма в валюте в корректировке договора
rule "remains_correction_value_currency"
when
  $entity: BaseEntity(getMeta().getClassName() == "credit"
                && ($r : getEl("change.remains.correction.value_currency"))
                && $r != null
                && toDouble($r) < 0)
then
  $entity.addValidationError("Не правильная сумма в валюте в корректировке договора");
end
$$$

rule save


rule read $$$
title: сумма в просроченной задолженности по начисленному вознаграждению договора
rule "remains_interest_pastdue_value"
when
  $entity: BaseEntity(getMeta().getClassName() == "credit"
                && ($r : getEl("change.remains.interest.pastdue.value"))
                && $r != null
                && toDouble($r) < 0)
then
  $entity.addValidationError("Не правильная сумма в просроченной задолженности по начисленному вознаграждению договора");
end
$$$

rule save

rule read $$$
title: сумма в валюте в просроченной задолженности по начисленному вознаграждению договора
rule "remains_interest_pastdue_value_currency"
when
  $entity: BaseEntity(getMeta().getClassName() == "credit"
                && ($r : getEl("change.remains.interest.pastdue.value_currency"))
                && $r != null
                && toDouble($r) < 0)
then
  $entity.addValidationError("Не правильная сумма в валюте в просроченной задолженности по начисленному вознаграждению договора");
end
$$$

rule save


rule read $$$
title: сумма в просроченной задолженности по основному долгу договора
rule "remains_debt_pastdue_value"
when
  $entity: BaseEntity(getMeta().getClassName() == "credit"
                && ($r : getEl("change.remains.debt.pastdue.value"))
                && $r != null
                && toDouble($r) < 0)
then
  $entity.addValidationError("Не правильная сумма в просроченной задолженности по основному долгу договора");
end
$$$

rule save

rule read $$$
title: сумма в валюте впросроченной задолженности по основному долгу договора
rule "remains_debt_pastdue_value_currency"
when
  $entity: BaseEntity(getMeta().getClassName() == "credit"
                && ($r : getEl("change.remains.debt.pastdue.value_currency"))
                && $r != null
                && toDouble($r) < 0)
then
  $entity.addValidationError("Не правильная сумма в валюте в просроченной задолженности по основному долгу договора");
end
$$$

rule save