#remains

rule read $$$
title: Остаток - Основной долг - Непросроченная  задолженность
rule "gen_remains_debt_current"
when
  $entity: BaseEntity(getMeta().getClassName() == "credit" 
                && getEls("{setString(KZT)}currency.short_name") == 0
                && getEl("change.remains.debt.current.value") != null
                && getEl("change.remains.debt.current.value") > 0
                && getEl("change.remains.debt.current.value_currency") == null )
then
  $entity.addValidationError("Не заполнен остаток основного долга в валюте договора: непросроченная задолженность");
end
$$$

rule save

rule read $$$
title: Остаток - Основной долг - Просроченная задолженность
rule "gen_remains_debt_pastdue"
when
  $entity: BaseEntity(getMeta().getClassName() == "credit" 
                && getEls("{setString(KZT)}currency.short_name") == 0
                && getEl("change.remains.debt.pastdue.value") != null
                && getEl("change.remains.debt.pastdue.value") > 0
                && getEl("change.remains.debt.pastdue.value_currency") == null )
then
  $entity.addValidationError("Не заполнен остаток основного долга в валюте договора: просроченная задолженность");
end
$$$

rule save

rule read $$$
title: Остаток - Основной долг - Списанная с баланса задолженность
rule "credit_gen_remains_debt_writeoff"
when
  $entity: BaseEntity(getMeta().getClassName() == "credit" 
                && getEls("{setString(KZT)}currency.short_name") == 0
                && getEl("change.remains.debt.write_off.value") != null
                && getEl("change.remains.debt.write_off.value") > 0
                && getEl("change.remains.debt.write_off.value_currency") == null )
then
  $entity.addValidationError("Не заполнен остаток основного долга в валюте договора: списанная с баланса задолженность");
end
$$$

rule save

rule read $$$
title: Остаток - Вознаграждение - Непросроченная  задолженность
rule "gen_remains_interest_current"
when
  $entity: BaseEntity(getMeta().getClassName() == "credit" 
                && getEls("{setString(KZT)}currency.short_name") == 0
                && getEl("change.remains.interest.current.value") != null
                && getEl("change.remains.interest.current.value") > 0
                && getEl("change.remains.interest.current.value_currency") == null )
then
  $entity.addValidationError("Не заполнен остаток начисленного вознаграждения в валюте договора: непогашенного");
end
$$$

rule save

rule read $$$
title: Остаток - Вознаграждение - Просроченная  задолженность
rule "gen_remains_interest_pastdue"
when
  $entity: BaseEntity(getMeta().getClassName() == "credit" 
                && getEls("{setString(KZT)}currency.short_name") == 0
                && getEl("change.remains.interest.pastdue.value") != null
                && getEl("change.remains.interest.pastdue.value") > 0
                && getEl("change.remains.interest.pastdue.value_currency") == null )
then
  $entity.addValidationError("Не заполнен остаток начисленного вознаграждения в валюте договора: просроченного");
end
$$$

rule save

rule read $$$
title: Остаток - Вознаграждение - Списанная с баланса задолженность
rule "gen_remains_interest_writeoff"
when
  $entity: BaseEntity(getMeta().getClassName() == "credit" 
                && getEls("{setString(KZT)}currency.short_name") == 0
                && getEl("change.remains.interest.write_off.value") != null
                && getEl("change.remains.interest.write_off.value") > 0
                && getEl("change.remains.interest.write_off.value_currency") == null )
then
  $entity.addValidationError("Не заполнен остаток начисленного вознаграждения в валюте договора: списанного с баланса");
end
$$$

rule save

rule read $$$
title: Остаток - Положительная/отрицательная корректировка
rule "gen_remains_correction"
when
  $entity: BaseEntity(getMeta().getClassName() == "credit" 
                && getEls("{setString(KZT)}currency.short_name") == 0
                && getEl("change.remains.correction.value") != null
                && getEl("change.remains.correction.value") > 0
                && getEl("change.remains.correction.value_currency") == null )
then
  $entity.addValidationError("Не заполнена положительная (отрицательная) корректировка в валюте договора");
end
$$$

rule save

rule read $$$
title: Остаток - Дисконт/премия
rule "gen_remains_discount"
when
  $entity: BaseEntity(getMeta().getClassName() == "credit" 
                && getEls("{setString(KZT)}currency.short_name") == 0
                && getEl("change.remains.discount.value") != null
                && getEl("change.remains.discount.value") > 0
                && getEl("change.remains.discount.value_currency") == null )
then
  $entity.addValidationError("Не заполнен дисконт (премия) в валюте договора");
end
$$$

rule save
#end of remains

rule read $$$
title: Руководитель юридического лица
rule "head juridical"
when
  $entity: BaseEntity(getMeta().getClassName() == "credit" 
            && getEls("{setString(12,17,18,19,24)}credit_type.code") == 0
            && getEls("{count}subject[is_organization=true]organization_info[is_se!=true][head=null]") > 0)
then
  $entity.addValidationError("Не заполнен руководитель юридического лица");
end
$$$

rule save

rule read $$$
title: cумма займа
rule "amount"
when
  $entity: BaseEntity(getMeta().getClassName() == "credit" 
            && getEl("credit_type.code") != "12"
            && getEl("amount") == null)
then
  $entity.addValidationError("Не указана сумма займа (условного обязательства) в валюте договора");
end
$$$

rule save

rule read $$$
title: Субъект кредитной истории
rule "credit subject"
when
  $entity: BaseEntity(getMeta().getClassName() == "credit" 
            && getEls("{setString(17,18)}credit_type.code") == 0
            && getEls("{count}subject") == 0)
then
  $entity.addValidationError("Отсутствует информация о субъекте кредитной истории");
end
$$$

rule save

rule read $$$
title: Вид валюты по договору
rule "currency by credit"
when
  $entity: BaseEntity(getMeta().getClassName() == "credit" 
            && getEls("{setString(15,25)}credit_type.code") == 0
            && getEl("currency.short_name") == null)
then
  $entity.addValidationError("Не указан вид валюты по договору");
end
$$$

rule save

rule read $$$
title: Организационно-правовая форма
rule "legal_form in jur"
when
  $entity: BaseEntity(getMeta().getClassName() == "credit" 
            && getEls("{setString(17,18,19,24)}credit_type.code") == 0
            && getEls("{count}subject[is_organization=true]organization_info[is_se!=true][country.code_numeric=398][legal_form=null]") > 0)
then
  $entity.addValidationError("Не заполнена организационно-правовая форма");
end
$$$

rule save

rule read $$$
title: Дата погашения по условиям договора
rule "contract_maturity_date"
when
  $entity: BaseEntity(getMeta().getClassName() == "credit" 
            && getEls("{setString(02,10,12,13,14,15,25,26)}credit_type.code") == 0
            && getEl("contract_maturity_date") == null)
then
  $entity.addValidationError("Не заполнена дата погашения по условиям договора");
end
$$$

rule save

rule read $$$
title: Источник финансирования банка
rule "finance source"
when
  $entity: BaseEntity(getMeta().getClassName() == "credit" 
            && getEls("{setString(02,03,10,12,13,14,15,17,18,24,25,26)}credit_type.code") == 0
            && getEl("finance_source.code") == null)
then
  $entity.addValidationError("Не заполнен источник финансирования банка (организации), выдавшей заем");
end
$$$

rule save

rule read $$$
title: Цель кредитования
rule "credit purpose"
when
  $entity: BaseEntity(getMeta().getClassName() == "credit" 
            && getEls("{setString(02,03,10,12,13,14,15,16,17,18,24,25,26)}credit_type.code") == 0
            && getEl("credit_purpose.code") == null)
then
  $entity.addValidationError("Не заполнена цель кредитования");
end
$$$

rule save

rule read $$$
title: Объект кредитования
rule "credit object"
when
  $entity: BaseEntity(getMeta().getClassName() == "credit" 
            && getEls("{setString(02,03,10,12,13,14,15,16,17,18,24,25,26)}credit_type.code") == 0
            && getEl("credit_object.code") == null)
then
  $entity.addValidationError("Не заполнен объект кредитования");
end
$$$

rule save


rule read $$$
title: Вид экономической деятельности для КЗ
rule "econ trade KZ"
when
  $entity: BaseEntity(getMeta().getClassName() == "credit" 
            && getEls("{count}subject[is_organization=true]organization_info[country.code_numeric=398][econ_trade.code=null]") > 0)
then
  $entity.addValidationError("Не указан вид экономической деятельности");
end
$$$

rule save

quit
