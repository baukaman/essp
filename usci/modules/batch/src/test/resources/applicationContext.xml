<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx" xmlns:batch="http://www.springframework.org/schema/batch"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd http://www.springframework.org/schema/batch http://www.springframework.org/schema/batch/spring-batch.xsd">

    <context:annotation-config/>
    <context:component-scan base-package="kz.bsbnb.usci.batch"/>

    <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <list>
                <value>classpath:properties/dataSource.properties</value>
            </list>
        </property>
    </bean>

    <bean id="log4jInitializer" class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
        <property name="staticMethod" value="org.springframework.util.Log4jConfigurer.initLogging"/>
        <property name="arguments">
            <list>
                <value>classpath:properties/log4j.properties</value>
            </list>
        </property>
    </bean>


    <import resource="classpath:database/dataSource.xml" />
    <import resource="classpath:database/hibernate.xml" />

    <tx:annotation-driven transaction-manager="transactionManager"/>

    <bean id="transactionManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <!--<context:component-scan base-package="kz.bsbnb.usci.eav_persistance.impl.db.postgresql" />-->
    <context:component-scan base-package="kz.bsbnb.usci.eav_persistance" />
    <context:component-scan base-package="kz.bsbnb.usci.eav_model.model.meta.impl" />
    <context:component-scan base-package="kz.bsbnb.usci.batch.helper.impl" />
    <context:component-scan base-package="kz.bsbnb.usci.batch.reader.impl" />
    <context:component-scan base-package="kz.bsbnb.usci.batch.writer.impl" />
    <context:component-scan base-package="kz.bsbnb.usci.batch.processor.impl" />

    <bean id="dataService" class="org.springframework.remoting.rmi.RmiProxyFactoryBean">
        <property name="serviceUrl" value="rmi://127.0.0.1:1098/DataService"/>
        <property name="serviceInterface" value="kz.bsbnb.usci.sync.service.IDataService"/>
    </bean>

    <bean id="jobRepository" class="org.springframework.batch.core.repository.support.MapJobRepositoryFactoryBean">
        <property name="transactionManager" ref="transactionManager" />
    </bean>

    <bean id="jobLauncher" class="org.springframework.batch.core.launch.support.SimpleJobLauncher">
        <property name="jobRepository" ref="jobRepository" />
    </bean>

    <batch:job id="job">
        <batch:step id="workflow">
            <batch:tasklet>
                <batch:chunk reader="staxEventEntityReader" writer="rmiEventEntityWriter" processor="entityProcessor"
                             commit-interval="1"/>
            </batch:tasklet>
        </batch:step>
    </batch:job>


    <bean id="stRawGroupDir" class="org.stringtemplate.v4.STRawGroupDir">
        <constructor-arg index="0" value="${ds.templates_dir}"/>
        <constructor-arg index="1" value="$"/>
        <constructor-arg index="2" value="$"/>
    </bean>

</beans>