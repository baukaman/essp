<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:jms="http://www.springframework.org/schema/jms"
       xmlns:amq="http://activemq.apache.org/schema/core"
       xmlns:p="http://www.springframework.org/schema/p"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
		http://activemq.apache.org/schema/core http://activemq.apache.org/schema/core/activemq-core.xsd
        http://www.springframework.org/schema/jms http://www.springframework.org/schema/jms/spring-jms.xsd">

    <context:component-scan base-package="kz.bsbnb.usci.showcase"/>
    <context:component-scan base-package="kz.bsbnb.usci.eav.stats"/>

    <context:annotation-config/>

    <bean id="dataSourceSC" class="org.apache.commons.dbcp.BasicDataSource">
        <property name="driverClassName" value="${jdbcSC.driver}"/>
        <property name="url" value="${jdbcSC.url}"/>
        <property name="username" value="${jdbcSC.user}"/>
        <property name="password" value="${jdbcSC.password}"/>
        <property name="initialSize" value="${jdbcSC.initialSize}"/>
        <property name="maxActive" value="${jdbcSC.maxActive}"/>
        <property name="validationQuery" value="${jdbcSC.validationQuery}"/>
        <property name="testOnBorrow" value="${jdbcSC.testOnBorrow}"/>
        <property name="testOnReturn" value="${jdbcSC.testOnReturn}"/>
    </bean>

    <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <list>
                <value>classpath:properties/oracle.properties</value>
                <value>classpath:properties/jms.properties</value>
            </list>
        </property>
    </bean>

    <bean id="log4jInitializer" class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
        <property name="staticMethod" value="org.springframework.util.Log4jConfigurer.initLogging"/>
        <property name="arguments">
            <list>
                <value>classpath:properties/log4j.properties</value>
            </list>
        </property>
    </bean>

    <bean id="context" class="org.jooq.impl.DSL" factory-method="using">
        <constructor-arg name="dialect">
            <value type="org.jooq.SQLDialect">${jooq.executor.constructor.args.first}</value>
        </constructor-arg>
    </bean>

    <!--Services-->
    <bean id="showcaseRmiServiceExporter" class="org.springframework.remoting.rmi.RmiServiceExporter">
        <property name="serviceName" value="showcaseService"/>
        <property name="service" ref="showcaseServiceImpl"/>
        <property name="serviceInterface" value="kz.bsbnb.usci.showcase.service.ShowcaseService"/>
        <property name="registryPort" value="1095"/>
    </bean>

    <bean id="remoteCoreShowcaseService" class="org.springframework.remoting.rmi.RmiProxyFactoryBean">
        <property name="serviceUrl" value="rmi://127.0.0.1:1099/coreShowcaseService"/>
        <property name="serviceInterface" value="kz.bsbnb.usci.showcase.service.CoreShowcaseService"/>
    </bean>

    <bean id="remoteMetaFactoryService" class="org.springframework.remoting.rmi.RmiProxyFactoryBean">
        <property name="refreshStubOnConnectFailure" value="true"/>
        <property name="serviceUrl" value="rmi://127.0.0.1:1098/metaFactoryService"/>
        <property name="serviceInterface" value="kz.bsbnb.usci.showcase.service.IMetaFactoryService"/>
    </bean>

    <!-- ActiveMQ destinations to use -->
    <amq:queue id="destination" physicalName="${jms.queueName}" />

    <!-- ActiveMQ broker -->
    <amq:connectionFactory id="jmsFactory" brokerURL="${jms.brokerURL}" />

    <!-- JMS Consumer Configuration -->
    <bean id="jmsConsumerConnectionFactory"
          class="org.springframework.jms.connection.SingleConnectionFactory"
          p:targetConnectionFactory-ref="jmsFactory" />

    <jms:listener-container container-type="default"
                            connection-factory="jmsConsumerConnectionFactory"
                            acknowledge="client">
                            <!--acknowledge="auto">-->
        <jms:listener destination="showcaseQueue" ref="showcaseMessageConsumer" />
    </jms:listener-container>
</beans>