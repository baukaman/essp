<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd">

    <context:component-scan base-package="kz.bsbnb.usci.brms.rulesvr.service" />
    <context:component-scan base-package="kz.bsbnb.usci.brms.rulesvr.rulesingleton" />

    <context:annotation-config/>

    <bean id="log4jInitializer" class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
        <property name="staticMethod" value="org.springframework.util.Log4jConfigurer.initLogging"/>
        <property name="arguments">
            <list>
                <value>classpath:log4j.properties</value>
            </list>
        </property>
    </bean>

    <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <list>
                <value>classpath:properties/oracle.properties</value>
            </list>
        </property>
    </bean>

    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
        <property name="driverClassName" value="${jdbcRule.driver}"/>
        <property name="url" value="${jdbcRule.url}"/>
        <property name="username" value="${jdbcRule.user}"/>
        <property name="password" value="${jdbcRule.password}"/>
        <property name="initialSize" value="${jdbcRule.initialSize}"/>
        <property name="minIdle" value="${jdbcRule.minIdle}"/>
        <property name="maxActive" value="${jdbcRule.maxActive}"/>
        <property name="maxIdle" value="${jdbcRule.maxIdle}"/>
    </bean>

    <bean class="kz.bsbnb.usci.brms.rulesvr.dao.impl.PackageDao">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <!--
    <bean class="kz.bsbnb.usci.brms.rulesvr.dao.impl.BatchVersionDao">
        <property name="dataSource" ref="dataSource"/>
    </bean>
    -->

    <bean class="kz.bsbnb.usci.brms.rulesvr.dao.impl.RuleDao">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <bean class="kz.bsbnb.usci.brms.rulesvr.rulesingleton.BRMSHelper">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <bean id="batchRmiServiceExporter" class="org.springframework.remoting.rmi.RmiServiceExporter">
        <property name="serviceName" value="batchService"/>
        <property name="service" ref="packageService"/>
        <property name="serviceInterface" value="kz.bsbnb.usci.brms.rulemodel.service.IPackageService"/>
        <property name="registryPort" value="1097"/>
    </bean>

    <!--
    <bean id="batchVersionRmiServiceExporter" class="org.springframework.remoting.rmi.RmiServiceExporter">
        <property name="serviceName" value="batchVersionService"/>
        <property name="service" ref="batchVersionService"/>
        <property name="serviceInterface" value="kz.bsbnb.usci.brms.rulemodel.service.IBatchVersionService"/>
        <property name="registryPort" value="1097"/>
    </bean>
    -->

    <bean id="ruleRmiServiceExporter" class="org.springframework.remoting.rmi.RmiServiceExporter">
        <property name="serviceName" value="ruleService"/>
        <property name="service" ref="ruleService"/>
        <property name="serviceInterface" value="kz.bsbnb.usci.brms.rulemodel.service.IRuleService"/>
        <property name="registryPort" value="1097"/>
    </bean>

    <bean id="context" class="org.jooq.impl.DSL" factory-method="using">
        <constructor-arg name="dialect">
            <value type="org.jooq.SQLDialect">${jooqRule.executor.constructor.args.first}</value>
        </constructor-arg>
        <!-- <constructor-arg index="0" value="${jooq.executor.constructor.args.first}"/> -->
    </bean>

    <bean id="remoteEntityService" class="org.springframework.remoting.rmi.RmiProxyFactoryBean">
        <property name="refreshStubOnConnectFailure" value="true"/>
        <property name="serviceUrl" value="rmi://127.0.0.1:1098/entityService"/>
        <property name="serviceInterface" value="kz.bsbnb.usci.sync.service.IEntityService"/>
    </bean>

    <bean id="remoteMetaService" class="org.springframework.remoting.rmi.RmiProxyFactoryBean">
        <property name="refreshStubOnConnectFailure" value="true"/>
        <property name="serviceUrl" value="rmi://127.0.0.1:1099/metaFactoryService"/>
        <property name="serviceInterface" value="kz.bsbnb.usci.core.service.IMetaFactoryService" />
    </bean>

</beans>